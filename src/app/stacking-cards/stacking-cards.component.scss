:root {
    --card-height: 40vw;
    --card-margin: 4vw;
    --card-top-offset: 1em;
    --numcards: 4;
    --outline-width: 0px;
}

#cards {
    padding-left: 0px;
    padding-bottom: calc(var(--numcards) * var(--card-top-offset));
    /* Make place at bottom, as items will slide to that position*/
    margin-bottom: var(--card-margin);
    /* Don't include the --card-margin in padding, as that will affect the scroll-timeline*/
}

#card_1 {
    --index: 1;
}

#card_2 {
    --index: 2;
}

#card_3 {
    --index: 3;
}

#card_4 {
    --index: 4;
}

.card {
    position: sticky;
    top: 10vh;
    padding-top: calc(var(--index) * var(--card-top-offset));
    margin-bottom: 40px;
}

@supports (animation-timeline: works) {



    .card {
        --index0: calc(var(--index) - 1);
        /* 0-based index */
        --reverse-index: calc(var(--numcards) - var(--index0));
        /* reverse index */
        --reverse-index0: calc(var(--reverse-index) - 1);
        /* 0-based reverse index */
    }

    .card__content {
        transform-origin: 50% 0%;
        will-change: transform;

        --duration: calc(var(--reverse-index0) * 1s);
        --delay: calc(var(--index0) * 1s);

        animation: var(--duration) linear scale var(--delay) forwards;
        animation-timeline: cards-element-scrolls-in-body;
    }

    @keyframes scale {
        to {
            transform:
                scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
        }
    }
}

/** DEBUG **/

#debug {
    position: fixed;
    top: 1em;
    left: 1em;
}

#debug::after {
    content: " Show Debug";
    margin-left: 1.5em;
    color: white;
    white-space: nowrap;
}

#debug:checked~main {
    --outline-width: 1px;
}



main {
    width: 100%;
    max-width: 1440px;
    margin: 0 auto;
}

#cards {
    list-style: none;
    outline: calc(var(--outline-width) * 10) solid blue;

    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(var(--numcards), var(--card-height));
    gap: var(--card-margin);
}

.card {
    outline: var(--outline-width) solid hotpink;
}

.card__content {
    height: 30vh;
    color: rgb(10, 5, 7);
    border-radius: 1em;
    overflow: hidden;

    display: grid;
    grid-template-areas: "text img";
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto;

    align-items: center;
    outline: var(--outline-width) solid lime;
}

mat-card {
    height: 100%;
    padding-left: 50px;
    display: flex;
    justify-content: flex-start;
    gap: 20px;
    background-color: #1E1E1E;
}

.card__content>div {
    grid-area: text;
    width: 80%;
    place-self: center;
    text-align: left;

    display: grid;
    place-items: start;
}

.card__content>figure {
    grid-area: img;
    overflow: hidden;
    border-radius: 10px;
    width: 100%;
    height: 100%;
    margin-left: 20px;
}

.card__content>figure>img {
    border-radius: 10px;

    width: 100%;
    height: 100%;
    object-fit: cover;
}

h1 {
    font-weight: 300;
    font-size: 3.5em;
}

h2 {
    font-size: 24px;
    color: #C4BEFF;
    font-weight: 400;
}

h3 {
    font-size: 36px;
    font-weight: 400;
    color: white;
    margin: 0;
}

p {
    width: 90%;
    font-size: 20px;
    color: #b9b9b9;
    font-weight: 400;
}

.btn {
    cursor: pointer;
    border: 1px solid #C4BEFF;
    background-color: #C4BEFF;
    color: #1E1E1E;
    font-size: 18px;
    height: 48px;
    width: 198px;
    border-radius: 10px;
    margin-right: 5px;
    font-weight: 400;
    &:hover {
        color: #C4BEFF;
                    background-color: #1E1E1E;
                    transition: 0.5s;
    }
}

aside {
    width: 50vw;
    margin: 0 auto;
    text-align: left;
}

aside p {
    margin-bottom: 1em;
}